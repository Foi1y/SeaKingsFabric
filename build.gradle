buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}

plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {

	maven { url ="https://maven.wispforest.io/releases/" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	maven { url = "https://maven.ladysnake.org/releases" }
	maven {
		name = "Curse Maven"
		url = "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		name "KosmX's maven"
		url 'https://maven.kosmx.dev/'
	}
	maven {
		name = 'GeckoLib'
		url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
		content {
			includeGroupByRegex("software\\.bernie.*")
			includeGroup("com.eliotlash.mclib")
		}
	}
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	include "io.wispforest:owo-sentinel:${project.owo_version}"
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")


	// Required dependencies
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	include modImplementation ("software.bernie.geckolib:geckolib-fabric-${project.minecraft_version}:${project.geckolib_version}")
	include modImplementation ("dev.emi:trinkets:${project.trinkets_version}")
	include modImplementation ("maven.modrinth:midnightlib:${project.midnightlib_version}")
	include modImplementation ("com.terraformersmc:modmenu:${project.mod_menu_version}")
	include modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

// Configure Maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
}
